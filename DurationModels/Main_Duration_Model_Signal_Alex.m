% Duration Strategies
% (based on JPM Quant group strategy 74)
%    Adapted by Oscar Arevalo and Alex Calvo
%
%    08/23/2013
% 
%    Using daily US treasury yields and S&P 500, generates a combined
%    signal for duration trading. Bond futures are used as the 
%    benchmark and as the instrument for trading to test the signal.
%    Performance results do not include transaction costs, however the
%    strategies presented trade in average once a month or less
%    frequently. It is assumed trades are entered at day's closing
%    price, no bid ask spread considered.
%    
%    Recommendation:
%    Bond mean reversion seems to work better than bond momentum, so this
%    model uses a bond mean reversion signal. Considering that equity
%    momentum outperforms bond mean reversion, the weigths are swaped to
%    give equity momentum a slightly higher weight, improving performance.
%    To gainfully utilize the signal, it seems the signal must be filtered,
%    such as comparing signal to its moving average, or relative high/low. 
%    Annualized return to risk from 2-Jun-2000 to 22-Aug-2013 is 0.92 for
%    Strategy #2 and 0.27 for the benchmark. The market movements the 
%    signal seems to capture range from a few weeks to a few months.
%
%    DATA Sources:
%    US Yields: http://www.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yield
%    Bond futures: http://www.quandl.com/OFDP-Open-Financial-Data-Project/FUTURE_TY1-CBOT-10-Year-Treasury-Note-Futures-Continuous-Contract-1-TY1-Front-Month

% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: /Users/alexcalvo/Dropbox/Matlab/MatlabDurationModel/Shared Data File/Duration_Data_April_2015.xlsx
%    Worksheet: CombinedDataPRICE_LAST
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2015/05/10 14:07:37

% Import the data
[~, ~, raw] = xlsread('/Users/alexcalvo/Dropbox/Matlab/MatlabDurationModel/MatlabDurationModel/Shared Data File/Duration_Model_Data','CombinedDataPRICE_LAST');
raw = raw(3:6830,1:9);
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};

% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

% Create output variable
data = reshape([raw{:}],size(raw));

% Allocate imported array to column variable names
Date = data(:,1);
SP500close = data(:,2);
TY1settlec = data(:,3);
US3Mo = data(:,4);
US10Yr = data(:,5);
JPMIGLOB = data(:,6);
GlobalPMI2MChange = data(:,7);
USPMI = data(:,8);
USPMI2MChange = data(:,9);

% Clear temporary variables
clearvars data raw R;

%Create Data Table
durationData3set = table(Date, SP500close, TY1settlec, US10Yr, US3Mo, GlobalPMI2MChange,USPMI2MChange);


%Carry-To-Risk Signal
%DATA:  3-month yield and 10-year yield, 
%       10-year bond return volatility

carry = (durationData3set.US10Yr-durationData3set.US3Mo)/100;


%Computing EWMA Standard Deviation of Bond Prices
expDecay = 0.97;
tewma = floor( 2/(1-expDecay)-1);
couponlag = 45; %Coupon rate is approximated by a moving average of the yield
calcbonds = tsmovavg(durationData3set.US10Yr,'s',couponlag,1).*100.*(1-(1+durationData3set.US10Yr./100).^(-10))./durationData3set.US10Yr + 100.*(1+durationData3set.US10Yr./100).^(-10);
squaredRet = returns(calcbonds(couponlag:end)).^2;
bondRetEWMA = tsmovavg(squaredRet,'e',tewma,1);
annualBondStdDev = sqrt(250.*bondRetEWMA(65:end)); %annualized realised volatility, cutting first 65 NAN values
 

%Carry-To-Risk
carryToRisk = carry(couponlag+65:end)./annualBondStdDev;
carrySignalRank = movPercentRank(carryToRisk,250*10); %10 year 
carryToRiskSignal = 4*(carrySignalRank - 0.5);


%SHORT Bond Momentum Signal
%DATA:  Bond Futures return index
bondIndex = durationData3set.TY1settlec;
bond12monMean = tsmovavg(bondIndex,'s',250,1);  
bond1monMean = tsmovavg(bondIndex,'s',20,1);    
bondSignal = ((bondIndex < bond12monMean) & (bondIndex < bond1monMean)) - ((bondIndex > bond12monMean) & (bondIndex > bond1monMean));
 

%Equity Momentum Signal
%DATA: Equity index
equityIndex = durationData3set.SP500close;
equity6moMean = tsmovavg(equityIndex,'s',125,1);
equitySignal = 2*(equityIndex < equity6moMean)-1;

%PMI Signal
%DATA: US PMI (ISM) and JPMorgan Global PMI
%Two months changes in indices previously computed to match month changes
%exactly (as opposed to possible errors by computed changes by day count)
pmiSignal = ((durationData3set.GlobalPMI2MChange < 0) & (durationData3set.USPMI2MChange < 0))...
    - ((durationData3set.GlobalPMI2MChange > 0) & (durationData3set.USPMI2MChange > 0));

%COMBINED SIGNAL
equitySignal = equitySignal(end-length(carryToRiskSignal)+1:end); %cutting off Date1s carry signal doesn't cover
bondSignal = bondSignal(end-length(carryToRiskSignal)+1:end);
bondIndex = bondIndex(end-length(carryToRiskSignal)+1:end); 
pmiSignal = pmiSignal(end-length(carryToRiskSignal)+1:end); 
dates = durationData3set.Date(end-length(carryToRiskSignal)+1:end); 
signalWeights = [0.41, 0.18, 0.24, 0.17]; %weights come from JPMorgan paper
combinedSignal = [carryToRiskSignal, equitySignal, bondSignal,pmiSignal] * transpose(signalWeights);
%Optimizing weights for Strategy 2 (using 1000 random
%combination of weights):
%   Maximum Return to Risk:
%       signalWeights = [0.5037    0.2045    0.2500    0.0417]
%   Minimum MaxDrawdown:
%       signalWeights = [0.5205    0.4093    0.0233    0.0469]
%   Minimum Std Deviation:
%       signalWeights = [0.5142    0.3884    0.0572    0.0401]


%Benchmark Bond Index Annualized Performance
benchmark.ret = annualizedDailyRet(bondIndex);
benchmark.vol = annualizedDailyVol(bondIndex);
benchmark.retToRisk = benchmark.ret/benchmark.vol;
benchmark.maxDrawdown = maxdrawdown(bondIndex);


%%%%%%% STRATEGIES %%%%%%%%%%%%%%%%%%%%%%%%%

%TRADING STRATEGY 1: monthly position adjusted to the combined signal
%Trades at the first trading day of the month, adjusting the position to
%the combined signal of the last trading day of the previous month.
pos1 = zeros(length(dates),1);
pos1(1) = combinedSignal(1);
month = str2num(datestr(dates,'mm'));
for k = 2: length(dates)
    if month(k) == month(k-1) 
        pos1(k) = pos1(k-1);
    else
        pos1(k) = combinedSignal(k);
    end
end
strategy1 = tradeDaily(pos1,bondIndex);

%TRADING STRATEGY 2: trades when combined signal is at 60 day High or Low.
%Using a percentile rank of the combined signal over the last 60 days, a
%trade is generated when signal is at 100% rank, to adjust to a Long position,
%and when signal is at effectiely 0% rank, to adjust to a Short position.

% Set days to determine range and rank signals 
days = 60;

% Call movPercentRank function to rank combined signal over past 60 days
posaux2 = movPercentRank(combinedSignal,days);
posaux2 = [1 + zeros(days-1,1);posaux2];
pos2 = zeros(length(posaux2),1);
pos2(1) = 1;

for k = 2:length(posaux2)  
    pos2(k) = ((combinedSignal(k) > 0) & (posaux2(k) == 1 ))-((combinedSignal(k) < 0) & (posaux2(k) == 1/days));
    if (pos2(k) > 0)     %Long signal
        pos2(k) = 1;
    end
    if (pos2(k) == 0)    %Hold signal
        pos2(k) = pos2(k-1);
    end
    if pos2(k) < 0       %Short signal
        pos2(k) = -1;
    end   
end
strategy2 = tradeDaily(pos2,bondIndex);

%Plot parameters
arrowScale = 3;
arrowWidth = 40;

%%%%%%%%Plots: Strategy 1
trades1 = [pos1(1);diff(pos1)];
posFieldy1 = bondIndex - trades1*arrowScale-2*sign(trades1);
posX1 = abs(trades1) > 0; 
posFieldy1 = posFieldy1(posX1);
posFieldx1 = dates(posX1);

figure();
subplot(2,1,1), quiver(posFieldx1/arrowWidth,posFieldy1,zeros(length(posFieldx1),1),trades1(posX1)*arrowScale,0,'black','Linewidth',1.5)
hold on
plot(dates/arrowWidth,bondIndex,'red')
plot(dates/arrowWidth,strategy1.mktValue,'blue')
grid on
title('Strategy 1 vs Benchmark')
xlabel('Date1')
ylabel('Market Value')
legend('Trades','US10y Futures','Strategy 1','Location','NorthWest')
set(gca,'XTickMode','manual')
set(gca,'XTickLabel',datestr(arrowWidth.*get(gca,'XTick'),'mm/dd/yy'))

hold off
subplot(2,1,2), plot(dates,pos1,'black','Linewidth',2.5);
ylim([-3,3])
grid on
title('Strategy 1: Position in Benchmark')
xlabel('Date1')
ylabel('Position size')
set(gca,'YTickMode','manual')
set(gca,'YTickLabel',num2str(100.*get(gca,'YTick')','%g%%'))
set(gca,'XTickMode','manual')
set(gca,'XTickLabel',datestr(get(gca,'XTick'),'mm/dd/yy'))

%%%%%%%%Plots: Strategy 2
trades2 = [pos2(1);diff(pos2)];
posFieldy2 = bondIndex - trades2*arrowScale-2*sign(trades2);
posX2 = abs(trades2) > 0; 
posFieldy2 = posFieldy2(posX2);
posFieldx2 = dates(posX2);

figure();
subplot(2,1,1), quiver(posFieldx2/arrowWidth,posFieldy2,zeros(length(posFieldx2),1),trades2(posX2)*arrowScale,0,'black','Linewidth',1.5)
hold on
plot(dates/arrowWidth,bondIndex,'red')
plot(dates/arrowWidth,strategy2.mktValue,'blue')
grid on
title('Duration Model vs Benchmark')
xlabel('Date1')
ylabel('Market Value')
legend('Trade','US10y Futures','Duration Model','Location','NorthWest')
set(gca,'XTickMode','manual')
set(gca,'XTickLabel',datestr(arrowWidth.*get(gca,'XTick'),'mm/dd/yy'))

hold off
subplot(2,1,2), plot(dates,pos2,'black','Linewidth',2.5);
ylim([-1.5,1.5]);
grid on
title('Duration Model: Position in Benchmark')
xlabel('Date1')
ylabel('Position size')
set(gca,'YTickMode','manual')
set(gca,'YTickLabel',num2str(100.*get(gca,'YTick')','%g%%'))
set(gca,'XTickMode','manual')
set(gca,'XTickLabel',datestr(get(gca,'XTick'),'mm/dd/yy'))


%Strategy performance statistics
figure()
subplot(3,2,1)
plot(dates, carryToRiskSignal);
grid on
title('Carry to Risk Signal')
xlabel('Date1')
ylabel('Carry/Vol Ratio')

subplot(3,2,2)
plot(bond1monMean);
grid on
title('Bond Index & 1 Month, 12 Month Mov Avgs')
xlabel('Date1')
ylabel('Moving Average')
hold on
plot(bond12monMean);
plot(TY1settlec);
legend('bond1monMean', 'bond12monMean', 'bondIndex')

subplot(3,2,3)
plot(equity6moMean);
grid on
title('Equity Index & 6 Month Mov Avg Signal')
xlabel('Date1')
ylabel('SP500 6-month mov avg')
hold on
plot(equityIndex);
legend('equityIndex' , 'equity6moMean')

subplot(3,2,4), plot(USPMI2MChange);
grid on
title('US PMI & Global PMI 2-month Change')
xlabel('Date1')
ylabel('US PMI Chng')
hold on
plot(GlobalPMI2MChange);
legend('GlobalPMI2MChange' , 'USPMI2MChange')

subplot(3,2,5), plot(dates, combinedSignal);
grid on
hold on
plot(dates, pos2);
title('Combined Signal')
xlabel('Date1')
ylabel('Combined Signal')

% createDetailedFigure(Date1, carryToRiskSignal,


%clc;
benchmark
strategy1
strategy2